// <auto-generated />
using System;
using EFCore_sample;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore_sample.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210422005922_ItemGrade")]
    partial class ItemGrade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore_sample.Guild", b =>
                {
                    b.Property<int>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuildId");

                    b.ToTable("Guild");
                });

            modelBuilder.Entity("EFCore_sample.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ItemGrade")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecoveredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("TestCreatorId")
                        .HasColumnType("int");

                    b.Property<int>("TestOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("TestCreatorId");

                    b.HasIndex("TestOwnerId")
                        .IsUnique();

                    b.ToTable("Item");

                    b.HasDiscriminator<int>("Type").HasValue(0);
                });

            modelBuilder.Entity("EFCore_sample.ItemDetail", b =>
                {
                    b.Property<int>("ItemDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemDetailId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("EFCore_sample.ItemReview", b =>
                {
                    b.Property<int>("ItemReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("ItemReviewId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemReview");
                });

            modelBuilder.Entity("EFCore_sample.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GuildId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PlayerId");

                    b.HasIndex("GuildId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("Index_Person_Name");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("EFCore_sample.EventItem", b =>
                {
                    b.HasBaseType("EFCore_sample.Item");

                    b.Property<DateTime>("DestroyDate")
                        .HasColumnType("datetime2");

                    b.ToTable("Item");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("EFCore_sample.Item", b =>
                {
                    b.HasOne("EFCore_sample.Player", "Creator")
                        .WithMany("CreatedItems")
                        .HasForeignKey("TestCreatorId");

                    b.HasOne("EFCore_sample.Player", "Owner")
                        .WithOne("OwnedItem")
                        .HasForeignKey("EFCore_sample.Item", "TestOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EFCore_sample.ItemOption", "Option", b1 =>
                        {
                            b1.Property<int>("ItemId")
                                .HasColumnType("int");

                            b1.Property<int>("Dex")
                                .HasColumnType("int");

                            b1.Property<int>("Hp")
                                .HasColumnType("int");

                            b1.Property<int>("Str")
                                .HasColumnType("int");

                            b1.HasKey("ItemId");

                            b1.ToTable("ItemOption");

                            b1.WithOwner()
                                .HasForeignKey("ItemId");
                        });

                    b.Navigation("Creator");

                    b.Navigation("Option");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("EFCore_sample.ItemDetail", b =>
                {
                    b.HasOne("EFCore_sample.Item", null)
                        .WithOne("Detail")
                        .HasForeignKey("EFCore_sample.ItemDetail", "ItemDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore_sample.ItemReview", b =>
                {
                    b.HasOne("EFCore_sample.Item", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("EFCore_sample.Player", b =>
                {
                    b.HasOne("EFCore_sample.Guild", "Guild")
                        .WithMany("Members")
                        .HasForeignKey("GuildId");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("EFCore_sample.Guild", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("EFCore_sample.Item", b =>
                {
                    b.Navigation("Detail");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EFCore_sample.Player", b =>
                {
                    b.Navigation("CreatedItems");

                    b.Navigation("OwnedItem");
                });
#pragma warning restore 612, 618
        }
    }
}
